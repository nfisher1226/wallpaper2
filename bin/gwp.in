#!/bin/sh
#  wallpaper v2
#
#  Copyright(©) 2013 Nathan Fisher <nfisher.sr@gmail.com>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#
#

VERSION=2.0a2
SELF="$0"
PREFIX="$(dirname $(dirname $SELF))"
PROGNAME=gwp
TEXTDOMAIN=$PROGNAME
CONFIGDIR=@@@SYSCONFDIR@@@/$PROGNAME
USERCONFIGDIR=$HOME/.config/$PROGNAME
LIBDIR=$PREFIX/lib/$PROGNAME
. $CONFIGDIR/conf
export GTK2_RC_FILES=${CONFIGDIR}/theme/gtkrc:~/.gtkrc-2.0
[ -f "$USERCONFIGDIR/conf" ] && . "$USERCONFIGDIR/conf"
[ ! -d "$USERCONFIGDIR" ] && install -d "$USERCONFIGDIR"
[ -f "$USERCONFIGDIR/state" ] && . "$USERCONFIGDIR/state"
[[ -z "$MODE" ]] && MODE=Stretch
[[ -z "$BACKEND" ]] && BACKEND=$DEFAULT_BACKEND
[[ -z "$WP_DIR" ]] && \
  WP_DIR="$(dirname $(find $DEFAULT_WP_DIR -type f | sort | head -n 1))"
if [ ! -f "$USERCONFIGDIR/wp-dirs" ] ; then
  dirname $(find $DEFAULT_WP_DIR -type f | sort | head -n 1) > \
    "$USERCONFIGDIR/wp-dirs"
else
  TMPFILE=$(mktemp)
  awk '!x[$0]++' "$USERCONFIGDIR/wp-dirs" > $TMPFILE
  mv $TMPFILE "$USERCONFIGDIR/wp-dirs"
  unset TMPFILE
fi

# Setup the slideshow
SLIDESHOWDIR=$USERCONFIGDIR/slideshows
[ ! -d "$SLIDESHOWDIR" ] && install -d "$SLIDESHOWDIR" \
  && touch "$SLIDESHOWDIR/default"
STMPFILE=$(mktemp)
cat $SLIDESHOWDIR/$CURRENT_SLIDESHOW >> $STMPFILE

# This sets the background for the preview area
[[ -z "$PREVIEW_BACKGROUND" ]] && PREVIEW_BACKGROUND=Pattern
case $PREVIEW_BACKGROUND in
Black)
  eventbox_name=BgBlack
;;
White)
  eventbox_name=BgWhite
;;
Pattern)
  eventbox_name=BgPixmap
;;
*)
  eventbox_name=BgNormal
;;
esac

# Get the correct mode
# Harder to do now with radiobuttons than with combobox, but worth it?
if [ "$STRETCH" = "true" ]
  then STRETCH_ACTIVE=true ; MODE=Stretch
  else STRETCH_ACTIVE=false
fi
if [ "$SCALE" = "true" ]
  then SCALE_ACTIVE=true ; MODE=Scale
  else SCALE_ACTIVE=false
fi
if [ "$STRETCH" = "true" ]
  then CENTER_ACTIVE=true ; MODE=Center
  else CENTER_ACTIVE=false
fi
if [ "$TILE" = "true" ]
  then TILE_ACTIVE=true ; MODE=Tile
  else TILE_ACTIVE=false
fi

# Get the correct backend (as above)
if [ "$FEH" = "true" ]
  then FEH_ACTIVE=true ; BACKEND=feh
  else FEH_ACTIVE=false
fi
if [ "$ROX" = "true" ]
  then ROX_ACTIVE=true ; BACKEND=rox
  else ROX_ACTIVE=false
fi
if [ "$IMLIBSETROOT" = "true" ]
  then IMLIBSETROOT_ACTIVE=true ; BACKEND=imlibsetroot
  else IMLIBSETROOT_ACTIVE=false
fi
if [ "$ESETROOT" = "true" ]
  then ESETROOT_ACTIVE=true ; BACKEND=esetroot
  else ESETROOT_ACTIVE=false
fi

export \
  PREFIX \
  PROGNAME \
  VERSION \
  TEXTDOMAIN \
  CONFIGDIR \
  USERCONFIGDIR \
  LIBDIR \
  HEIGHT \
  BACKEND \
  MODE \
  WP_DIR \
  WP \
  PREVIEW_BACKGROUND \
  SLIDESHOWDIR \
  CURRENT_SLIDESHOW \
  STMPFILE \
  STRETCH \
  SCALE \
  CENTER \
  TILE \
  FEH \
  ROX \
  ESETROOT \
  IMBLISETROOT

# Read in functions
. $LIBDIR/gwp.sh

# get the width for the preview area
WIDTH=$(echo $[$HEIGHT * 16 / 10] | cut -f 1 -d '.')

# Build our list of image files
build_list () {
[ -d "$WP_DIR" ] && find "$WP_DIR" \
  -maxdepth 1 \
  -type f \
  \( -iname "*.png" \
  -o -iname "*.jp*g" \
  -o -iname "*.svg" \
  -o -iname "*.tif*" \) \
  | while read f ; do echo "$(basename $f)|$f" ; done
}
export -f build_list

# Refresh the preview image
refresh_preview () {
[ -f "$WP" ] && \
   [ "$(egrep '.png|.jpg|.jpeg|.PNG|.JPG|.svg' <<< ${WP})" ] && \
   ln -sf "$WP" $USERCONFIGDIR/current.png
}
export -f refresh_preview

# Refresh the preview image with something from the slideshow
refresh_slideshow_preview () {
[ -f "$STREE" ] && \
   [ "$(egrep '.png|.jpg|.jpeg|.PNG|.JPG|.svg' <<< ${STREE})" ] && \
   ln -sf "$STREE" $USERCONFIGDIR/current.png
}
export -f refresh_slideshow_preview

# setup menu entries for various graphics editors
# This function reads from the redirection below in the format
# icon-name|Program-name|executable
editor_programs () {
while read PROG
  do CMD=$(cut -f 3 -d '|' <<< ${PROG})
  if which $CMD &>/dev/null
    then ICON=$(cut -f 1 -d '|' <<< ${PROG})
    NAME=$(cut -f 2 -d '|' <<< ${PROG})
    echo '<menuitem icon='\"$ICON\"'><label>'$NAME'</label><action>'$CMD \"\$WP_DIR/\$WP\" \&'</action></menuitem>'
  fi
done << EOF
gimp|Gimp|gimp
cinepaint|Cinepaint|cinepaint
krita|Krita|krita
mtpaint|mtPaint|mtpaint
inkscape|Inkscape|inkscape
inkscape|Inkscapelite|inkscapelite
EOF
}
export EDITORS="$(editor_programs)"

# setup menu entries for various graphics viewers
# This function reads from the redirection below in the format
# icon-name|Program-name|executable
viewer_programs () {
while read PROG
  do CMD=$(cut -f 3 -d '|' <<< ${PROG})
  if which $CMD &>/dev/null
    then ICON=$(cut -f 1 -d '|' <<< ${PROG})
    NAME=$(cut -f 2 -d '|' <<< ${PROG})
    echo '<menuitem icon='\"$ICON\"'><label>'$NAME'</label><action>'$CMD \"\$WP_DIR/\$WP\" \&'</action></menuitem>'
  fi
done << EOF
xnview|XnView|xnview
gqview|Gqview|gqview
gpicview|Gpicview|gpicview
viewnior|Viewnior|viewnior
fotox|Fotox|fotox
ristretto|Ristretto|ristretto
feh|Feh|feh
mirage|Mirage|mirage
eog|Eog|eog
fspot|Fspot|fspot
EOF
}
export VIEWERS="$(viewer_programs)"

# Refresh the status text
status_refresh () {
. $USERCONFIGDIR/last
echo 'Current:' $(basename $WP)
}
export -f status_refresh

get_slideshow () {
[[ -z "$CURRENT_SLIDESHOW" ]] && CURRENT_SLIDESHOW=default
cat $SLIDESHOWDIR/$CURRENT_SLIDESHOW
}
export -f get_slideshow


# Create the prefs dialog
export PTMPFILE=$(mktemp)
cat >> $PTMPFILE << EOF
<window title="$PROGNAME-$VERSION: $(gettext 'preferences')" icon="gtk-preferences" window-position="2">
 <vbox>
  <hbox>
   <text space-expand="false">
    <label>$(gettext 'Preview height (pixels)')</label>
   </text>
   <hseparator space-expand="true"></hseparator>
   <comboboxtext>
    <variable>HEIGHT</variable>
    <default>$HEIGHT</default>
    <item>150</item>
    <item>200</item>
    <item>250</item>
    <item>300</item>
    <item>400</item>
    <item>500</item>
   </comboboxtext>
  </hbox>
  <hbox>
   <text space-expand="false">
    <label>$(gettext 'Preview background')</label>
   </text>
   <hseparator space-expand="true"></hseparator>
   <comboboxtext>
    <variable>PREVIEW_BACKGROUND</variable>
    <default>$PREVIEW_BACKGROUND</default>
    <item>Black</item>
    <item>White</item>
    <item>Pattern</item>
    <item>none</item>
   </comboboxtext>
  </hbox>
  <hbox>
   <button>
    <label>$(gettext 'Close')</label>
    <input file stock="gtk-close"></input>
   </button>
  </hbox>
 </vbox>
</window>
EOF
gwp_prefs () {
TMPFILE=$(mktemp)
gtkdialog --file $PTMPFILE > $TMPFILE
. $TMPFILE
[ ! "$EXIT" = "abort" ] && grep -v 'EXIT=' $TMPFILE > $USERCONFIGDIR/conf
rm $TMPFILE
}
export -f gwp_prefs

# Create a simple "About" dialog
ATMPFILE=$(mktemp)
cat >> $ATMPFILE << EOF
<window title="${PROGNAME}-${VERSION}: $(gettext 'about')" icon="gtk-about">
 <vbox>
  <notebook labels="$(gettext 'About|Credits')">
   <vbox>
    <text use-markup="true">
     <label>"<b>$(gettext 'A fast and lightweight wallpaper setter')</b>"</label>
    </text>
    <text>
     <label>"$(gettext 'Gwp is designed to allow the average user to set their desktop wallpaper with a minimum of fuss. It is designed to be fast, easy, and desktop independent while providing a simple and streamlined interface.')"</label>
    </text>
    <button>
     <label>https://bitbucket.org/nfisher1226/wallpaper2</label>
     <action>xdg-open https://bitbucket.org/nfisher1226/wallpaper2 &</action>
    </button>
   </vbox>
   <vbox>
    <hbox>
     <text space-expand="false">
      <label>$(gettext 'Author'): Nathan Fisher</label>
     </text>
     <hseparator space-expand="true"></hseparator>
    </hbox>
    <hbox>
     <text space-expand="false">
      <label>$(gettext 'License'): GPLv2</label>
     </text>
     <hseparator space-expand="true"></hseparator>
    </hbox>
    <hbox>
     <text space-expand="false">
      <label>Copyright(©) 2013 Nathan Fisher</label>
     </text>
     <hseparator space-expand="true"></hseparator>
    </hbox>
    <text><label>" "</label></text>
    <button>
     <label>http://www.gnu.org/licenses/gpl-2.0.txt</label>
     <action>xdg-open http://www.gnu.org/licenses/gpl-2.0.txt &</action>
    </button>
   </vbox>
  </notebook>
  <hbox>
   <button>
    <label>$(gettext 'Close')</label>
    <input file stock="gtk-close"></input>
   </button>
  </hbox>
 </vbox>
</window>
EOF

WTMPFILE=$(mktemp)
cat >> $WTMPFILE << EOF
<window title="$PROGNAME-$VERSION" icon_name="preferences-desktop-wallpaper" resizable="false" border-width="0">
 <vbox space-expand="true" space-fill="true">
  <hbox space-expand="true" space-fill="true">
   <vbox>
    <menubar>
     <menu>
      <menuitem checkbox="true" use-underline="true" active="false"
        accel-key="0x45" accel-mods="4">
       <label>$(gettext 'Slideshow editor')</label>
       <action>if true show:SLIDESHOW_EDITOR</action>
       <action>if false hide:SLIDESHOW_EDITOR</action>
      </menuitem>
      <separator></separator>
      $VIEWERS
      <separator></separator>
      $EDITORS
      <separator></separator>
       <menuitem icon="gtk-close" use-underline="true" accel-key="0x51"
         accel-mods="4">
        <label>$(gettext 'Close')</label>
        <action>exit:Close</action>
       </menuitem>
      <label>$(gettext 'Tools')</label>
     </menu>
     <menu>
      <menu>
       <menuitem radiobutton="true" use-underline="true" accel-key="0x53"
         accel-mods="4" active="$STRETCH_ACTIVE">
        <label>Stretch</label>
        <variable>STRETCH</variable>
       </menuitem>
       <menuitem radiobutton="true" use-underline="true" accel-key="0x46"
         accel-mods="4" active="SCALE_ACTIVE">
        <label>Scale</label>
        <variable>SCALE</variable>
       </menuitem>
       <menuitem radiobutton="true" use-underline="true" accel-key="0x4D"
         accel-mods="4" active="CENTER_ACTIVE">
        <label>Center</label>
        <variable>CENTER</variable>
       </menuitem>
       <menuitem radiobutton="true" use-underline="true" accel-key="0x54"
         accel-mods="4" active="TILE_ACTIVE">
        <label>Tile</label>
        <variable>TILE</variable>
       </menuitem>
       <label>$(gettext 'Mode')</label>
      </menu>
      <menu>
       <menuitem radiobutton="true" use-underline="true" accel-key="0x46"
         accel-mods="1" active="$FEH_ACTIVE">
        <label>feh</label>
        <variable>FEH</variable>
       </menuitem>
       <menuitem radiobutton="true" use-underline="true" accel-key="0x52"
         accel-mods="1" active="$ROX_ACTIVE">
        <label>rox</label>
        <variable>ROX</variable>
       </menuitem>
       <menuitem radiobutton="true" use-underline="true" accel-key="0x45"
         accel-mods="1" active="$ESETROOT_ACTIVE">
        <label>esetroot</label>
        <variable>ESETROOT</variable>
       </menuitem>
       <menuitem radiobutton="true" use-underline="true" accel-key="0x49"
         accel-mods="1" active="$IMLIBSETROOT_ACTIVE">
        <label>imlibsetroot</label>
        <variable>IMLIBSETROOT</variable>
       </menuitem>
       <label>$(gettext 'Backend')</label>
      </menu>
      <separator></separator>
      <menuitem icon="gtk-preferences">
       <label>$(gettext 'Preferences')</label>
       <action>gwp_prefs &</action>
      </menuitem>
      <label>Options</label>
     </menu>
     <menu>
      <menuitem stock="gtk-about">
       <action>gtkdialog --file $ATMPFILE &</action>
       <label>$(gettext 'About')</label>
      </menuitem>
      <menuitem stock="gtk-help">
       <action>xdg-open https://bitbucket.org/nfisher1226/wallpaper2 &</action>
       <label>$(gettext 'Help')</label>
      </menuitem>
      <label>$(gettext 'Help')</label>
     </menu>
    </menubar>
    <hbox>
     <pixmap>
      <input file>${CONFIGDIR}/theme/vspace.png</input>
     </pixmap>
     <comboboxentry accept="directory" file-monitor="true">
      <variable>WP_DIR</variable>
      <default>$WP_DIR</default>
      <input file>$USERCONFIGDIR/wp-dirs</input>
      <output file>$USERCONFIGDIR/wp-dirs</output>
      <action signal="activate">save:WP_DIR</action>
      <action signal="changed">clear:WP</action>
      <action signal="changed">refresh:WP</action>
     </comboboxentry>
     <button tooltip-text="$(gettext 'Add another directory to the list')">
      <input file stock="gtk-directory"></input>
      <action type="fileselect">WP_DIR</action>
      <action>save:WP_DIR</action>
     </button>
     <pixmap>
      <input file>${CONFIGDIR}/theme/vspace.png</input>
     </pixmap>
    </hbox>
    <tree headers-visible="false" selected-row="0"
      selection-mode="1" exported-column="1"
      column-type="string|string" column-visible="true|false"
      tooltip-text="$(gettext 'Doubleclick to set')">
     <label>Images|Paths</label>
     <variable>WP</variable>
     <input>build_list</input>
     <action signal="changed">refresh_preview</action>
     <action signal="changed" type="refresh">CURRENTIMG</action>
     <action>set_wallpaper</action>
     <action>echo WP_DIR=\$WP_DIR > $USERCONFIGDIR/last</action>
     <action>echo WP=\$WP >> $USERCONFIGDIR/last</action>
     <action>echo MODE=\$MODE >> $USERCONFIGDIR/last</action>
     <action>echo BACKEND=\$BACKEND >> $USERCONFIGDIR/last</action>
     <action type="refresh">STATUS</action>
    </tree>
   </vbox>
   <vbox width-request="$WIDTH" space-expand="true" space-fill="true">
    <eventbox name="$eventbox_name">
     <pixmap file-monitor="true" export="false">
      <variable>CURRENTIMG</variable>
      <height>$HEIGHT</height>
      <input file>$USERCONFIGDIR/current.png</input>
     </pixmap>
    </eventbox>
   </vbox>
   <pixmap>
    <input file>${CONFIGDIR}/theme/vspace.png</input>
   </pixmap>
  </hbox>
  <hbox>
   <pixmap>
    <input file>${CONFIGDIR}/theme/vspace.png</input>
   </pixmap>
   <text space-expand="false">
    <variable>STATUS</variable>
    <label>$(status_refresh)</label>
    <input>status_refresh</input>
   </text>
   <hbox space-expand="true" space-fill="true">
    <text><label>" "</label></text>
   </hbox>
   <vseparator></vseparator>
   <button tooltip-text="$(gettext 'Set current selection')">
    <label>$(gettext 'Apply')</label>
    <input file stock="gtk-apply"></input>
    <action>set_wallpaper</action>
    <action>echo WP_DIR=\$WP_DIR > $USERCONFIGDIR/last</action>
    <action>echo WP=\$WP >> $USERCONFIGDIR/last</action>
    <action>echo MODE=\$MODE >> $USERCONFIGDIR/last</action>
    <action>echo BACKEND=\$BACKEND >> $USERCONFIGDIR/last</action>
    <action type="refresh">STATUS</action>
   </button>
   <button tooltip-text="$(gettext 'Exit program')">
    <label>$(gettext 'Close')</label>
    <input file stock="gtk-close"></input>
   </button>
   <pixmap>
    <input file>${CONFIGDIR}/theme/vspace.png</input>
   </pixmap>
  </hbox>
  <vbox visible="false">
   <hseparator space-expand="true" space-fill="true"></hseparator>
   <hbox>
    <button space-expand="false" space-fill="false"
      tooltip-text="$(gettext 'Add selection to current slideshow')">
     <input file stock="gtk-add"></input>
     <action function="insert">WP,STREE</action>
     <action>save:STREE</action>
     <action>sed -i 's:|::g' $STMPFILE</action>
     <action>refresh:STREE</action>
     <action>cat $STMPFILE > $SLIDESHOWDIR/\$CURRENT_SLIDESHOW</action>
    </button>
    <button space-expand="false" space-fill="false"
      tooltip-text="$(gettext 'Remove selection from current slideshow')">
     <input file icon="gtk-remove"></input>
     <action function="removeselected">STREE</action>
     <action>save:STREE</action>
     <action>sed -i 's:|::g' $STMPFILE</action>
     <action>refresh:STREE</action>
     <action>cat $STMPFILE > $SLIDESHOWDIR/\$CURRENT_SLIDESHOW</action>
    </button>
    <vseparator></vseparator>
    <button space-expand="false" space-fill="false"
      tooltip-text="$(gettext 'Play slideshow')">
     <input file stock="gtk-media-play"></input>
     <action>echo</action>
    </button>
    <button space-expand="false" space-fill="false"
      tooltip-text="$(gettext 'Pause slideshow')">
     <input file stock="gtk-media-pause"></input>
     <action>echo</action>
    </button>
    <vseparator></vseparator>
    <comboboxtext space-expand="false" space-fill="false">
     <input>ls $SLIDESHOWDIR</input>
     <variable>CURRENT_SLIDESHOW</variable>
     <action>cat $SLIDESHOWDIR/\$CURRENT_SLIDESHOW > $STMPFILE</action>
     <action type="refresh">STREE</action>
    </comboboxtext>
    <button space-expand="false" space-fill="false"
      tooltip-text="$(gettext 'Create a new slideshow')">
     <input file stock="gtk-new"></input>
     <action>show:NEW_SLIDESHOW</action>
    </button>
    <entry visible="false">
     <variable>NEW_SLIDESHOW</variable>
     <action signal="activate">touch $SLIDESHOWDIR/\$NEW_SLIDESHOW</action>
     <action signal="activate">refresh:CURRENT_SLIDESHOW</action>
     <action signal="activate">hide:NEW_SLIDESHOW</action>
    </entry>
    <vseparator space-expand="false" space-fill="false"></vseparator>
    <hbox space-expand="true" space-fill="true">
     <text>
      <label>" "</label>
     </text>
    </hbox>
   </hbox>
   <tree selection-mode="1"
     tooltip-text="$(gettext 'Add items to the list that you wish to play in a slideshow')"
     exported-column="0" column-type="string" column-visible="true">
    <label>Images</label>
    <height>250</height>
    <input file>$STMPFILE</input>
    <output file>$STMPFILE</output>
    <variable>STREE</variable>
    <action signal="changed">refresh_slideshow_preview</action>
    <action signal="changed" type="refresh">CURRENTIMG</action>
   </tree>
   <variable>SLIDESHOW_EDITOR</variable>
  </vbox>
 </vbox>
 <action signal="hide">exit:Close</action>
</window>
EOF
# Actually run something here
ETMPFILE=$(mktemp)
cat << EOF
${PROGNAME}-${VERSION}
Copyright(©) 2013 Nathan Fisher <nfisher.sr@gmail.com>
EOF
gtkdialog --file $WTMPFILE | tee $ETMPFILE
. $ETMPFILE
[ ! "$EXIT" = "abort" ] && grep -v EXIT= $ETMPFILE > $USERCONFIGDIR/state
rm $STMPFILE $ETMPFILE $ATMPFILE $PTMPFILE $WTMPFILE
